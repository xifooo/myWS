from objprint import op
import math
# 比较浮点数时, 永远不能使用 ==

op.config(arg_name=True)

# 十进制的浮点数计算可能产生精度损失
op(0.1 + 0.2 == 0.3)
op(1e50 == 10 ** 50)
# 1e50 被视为float, 10**50 被视为 big integer

op(1e500 == 1e600)      
# 1e500超过了浮点数表达范围（64位）, 便表示为inf（无穷）, 1e600也是
op(1e500 > 10 ** 1000)
# 1e500 是无穷, 10*1000是integer。无穷永远比int型大    -- 比较基本上是个噩梦(float_richcompare)
op(1e500 * 1e500 > 0)
op(1e500 / 1e500 > 0)
# 正无穷*正无穷必然大于0, 但正无穷÷正无穷得到的是一个>=0的数, py认为这个结果不是个东西, 于是定义为NaN
op(1e500 / 1e500 == 1e500 /1e500)


"""
基于IEEE754。
超过表达范围的数: 用inf表示无穷, NaN表示和无穷不相关、或不是个东西
inf = inf, -inf = -inf, 而NaN与任何浮点数比较的结果都为False

比较浮点数时, 永远不能使用 ==, 而应该比较两个值差值的绝对值, 是否小于一个比较小的值, 比如0.000001, 
如果是, 就认为它们基本一样
"""

math.isinf(1e500)
math.isnan(1e500/1e500)